# https://about.gitlab.com/2016/05/23/gitlab-container-registry/

image: docker

services:
- docker:dind

stages:
- build
- test
- review
- deploy

variables:
  CONTAINER_TEST_IMAGE: registry.gitlab.com/nevax/picblog:$CI_BUILD_REF_NAME
  CONTAINER_RELEASE_IMAGE: registry.gitlab.com/nevax/picblog:latest
  CONTAINER_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2

before_script:
- touch docker/db/.env docker/nginx/.env docker/php-fpm/.env
- apk add --no-cache bash gettext py-pip
- pip install docker-compose
- docker-compose version
- docker-compose config
- docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.gitlab.com

build:
  stage: build
  script:
  - docker-compose pull
  - docker-compose build
  - docker push registry.gitlab.com/nevax/picblog/picblog_php:latest
  - docker push registry.gitlab.com/nevax/picblog/picblog_nginx:latest

build_vendor_dev:
  stage: build
  script:
    - docker build -t vendor_dev -f docker/vendor-dev/Dockerfile .
    - export VENDOR_DOCKER=$(docker run -d -t vendor_dev tail -f /dev/null)
    - docker cp -a $VENDOR_DOCKER:/app/vendor .
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    expire_in: 6h
    paths:
      - vendor/

tests:
  stage: test
  script:
  - docker-compose pull
  - chmod +x docker/*.sh
  - bash -c 'cd docker/ && ./generate_env.sh staging'
  - docker-compose up -d
  - docker-compose exec -T cache redis-cli config set maxmemory 41943040
  - docker cp vendor $(docker-compose ps -q php):/var/www/html/
  - docker-compose exec -e APP_ENV=testing -T php vendor/bin/phpunit --coverage-text --colors=never
  allow_failure: true
  dependencies:
    - build_vendor_dev

lint:
  stage: review
  script:
  - echo "LINT CODE"
  - docker-compose pull
  - chmod +x docker/*.sh
  - bash -c 'cd docker/ && ./generate_env.sh staging'
  - docker-compose up -d
  - docker-compose exec -T cache redis-cli config set maxmemory 41943040
  - docker cp vendor $(docker-compose ps -q php):/var/www/html/
  - docker-compose exec -e APP_ENV=testing -T php APP_ENV=testing vendor/bin/php-cs-fixer fix --dry-run --diff
  allow_failure: true
  dependencies:
    - build_vendor_dev

security_audit:
  stage: review
  script:
  - echo "SECURITY AUDIT"
  - docker-compose pull
  - chmod +x docker/*.sh
  - bash -c 'cd docker/ && ./generate_env.sh staging'
  - docker-compose up -d
  - docker-compose exec -T cache redis-cli config set maxmemory 41943040
  - docker cp vendor $(docker-compose ps -q php):/var/www/html/
  - docker-compose exec -e APP_ENV=testing -T php sh vendor/pheromone/phpcs-security-audit/symlink.sh
  - docker-compose exec -e APP_ENV=testing -T APP_ENV=testing vendor/bin/phpcs --standard=./vendor/pheromone/phpcs-security-audit/example_base_ruleset.xml ./vendor/pheromone/phpcs-security-audit/tests.php
  allow_failure: true
  dependencies:
    - build_vendor_dev

deploy_staging:
  stage: deploy
  script:
  - echo "Deploying staging"
  - apk add --no-cache openssh-client socat bash
  - eval $(ssh-agent -s)
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - chmod +x docker/*.sh
  - bash -c 'cd docker/ && ./generate_env.sh staging'
  - bash -c 'cd docker/ && ./deploy.sh staging'
  environment:
    name: staging
    url: https://nevax.awsmppl.com
  except:
    - master

deploy_production:
  stage: deploy
  script:
  - echo "Deploying production"
  - apk add --no-cache openssh-client socat bash
  - eval $(ssh-agent -s)
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - chmod +x docker/*.sh
  - bash -c 'cd docker/ && ./generate_env.sh production'
  - bash -c 'cd docker/ && ./deploy.sh production'
  environment:
    name: production
    url: https://agravelot.com
  when: manual
  only:
  - master
