version: '3.7'
services:
  db:
    image: mariadb
    restart: unless-stopped
    volumes:
    - db-data:/var/lib/mysql:rw,delegated
    env_file:
    - docker/db/.env

  db_pg:
    image: postgres:11-alpine
    restart: unless-stopped
    volumes:
      - db-pg-data:/var/lib/postgresql/data:rw,delegated
    env_file:
      - docker/db/.env

  php: &php_base
    image: registry.gitlab.com/flasher/flasher/picblog_php:${CI_COMMIT_SHORT_SHA:-latest}
    build:
      context: .
      dockerfile: Dockerfile
      target: php_app
    restart: unless-stopped
    env_file:
    - docker/php-fpm/.env
    volumes:
    - storage:/var/www/html/storage:rw,delegated
    - public_vendor:/var/www/html/public/vendor:rw,delegated
    links:
    - db
    - cache
    depends_on:
    - db
    - cache

  queue:
    <<: *php_base
    build:
      context: .
      dockerfile: Dockerfile
      target: php_queue
    environment:
      CONTAINER_ROLE: "queue"

  scheduler:
    <<: *php_base
    build:
      context: .
      dockerfile: Dockerfile
      target: php_scheduler
    user: root
    environment:
      CONTAINER_ROLE: "scheduler"

  publisher:
    <<: *php_base
    build:
      context: .
      dockerfile: Dockerfile
      target: php_publisher
    restart: on-failure
    environment:
      CONTAINER_ROLE: "publisher"

  nginx:
    image: registry.gitlab.com/flasher/flasher/picblog_nginx:${CI_COMMIT_SHORT_SHA:-latest}
    build:
      context: .
      dockerfile: Dockerfile
      target: nginx
    restart: unless-stopped
    ports:
    - 8080:80
    env_file: ./docker/nginx/.env
    volumes:
    - storage:/var/www/html/storage:ro,delegated
    - public_vendor:/var/www/html/public/vendor:ro,delegated
    depends_on:
    - php
    links:
    - php

  cache:
    image: redis:5.0-alpine
    restart: unless-stopped
    volumes:
      - cache_data:/data:rw,delegated

  redirect:
    image: morbz/docker-web-redirect
    restart: unless-stopped
    environment:
      VIRTUAL_HOST: www.${APP_URL}
      LETSENCRYPT_HOST: www.${APP_URL}
      REDIRECT_TARGET: ${APP_URL}

  backup:
    image: schickling/mysql-backup-s3
    restart: unless-stopped
    links:
      - db
    depends_on:
      - db
    environment:
      S3_ACCESS_KEY_ID: ${DO_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${DO_SECRET_ACCESS_KEY}
      S3_BUCKET: ${DO_BUCKET}
      S3_PREFIX: ${APP_ENV}/backups
      S3_ENDPOINT: ${DO_ENDPOINT}
      MYSQL_HOST: db
      MYSQL_USER: picblog
      MYSQL_PASSWORD: ${DB_PASSWORD}
      SCHEDULE: "@daily"
      MULTI_FILES: "true"

  pgbackups3:
    image: schickling/postgres-backup-s3
    links:
      - postgres
    environment:
      S3_ACCESS_KEY_ID: ${DO_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${DO_SECRET_ACCESS_KEY}
      S3_BUCKET: ${DO_BUCKET}
      S3_PREFIX: ${APP_ENV}/backups
      S3_ENDPOINT: ${DO_ENDPOINT}
      POSTGRES_DATABASE: picblog
      POSTGRES_USER: picblog
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      SCHEDULE: '@daily'
      POSTGRES_EXTRA_OPTS: '--schema=public --blobs'

volumes:
  db-data:
  storage:
  public_vendor:
  cache_data:
  db-pg-data:

networks:
  default:
    external:
      name: nginx-proxy
