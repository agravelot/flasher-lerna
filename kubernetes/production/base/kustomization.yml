namespace: flasher-production

patchesJson6902:
  # Change certificate secret key
  - target:
      kind: Gateway
      name: flasher-gateway
      version: v1beta1
      group: networking.istio.io
    patch: |-
      - op: replace
        path: /spec/servers/1/tls/credentialName
        value: ingress-cert-wildcard-jkanda.fr
  - target:
      kind: Gateway
      name: flasher-gateway
      version: v1beta1
      group: networking.istio.io
    patch: |-
      - op: replace
        path: /spec/servers/1/port/name
        value: https-flasher-production # Change name to avoid conflicts https://istio.io/latest/docs/ops/common-problems/network-issues/#port-conflict-when-configuring-multiple-tls-hosts-in-a-gateway
      - op: replace
        path: /spec/servers/0/port/name
        value: http-flasher-production # Change name to avoid conflicts https://istio.io/latest/docs/ops/common-problems/network-issues/#port-conflict-when-configuring-multiple-tls-hosts-in-a-gateway
      - op: replace
        path: /spec/servers/1/hosts
        value:
          - "./jkanda.fr"
          - "./*.jkanda.fr"
generators:
  - secret-generator.yml

patchesStrategicMerge:
  - api/authorization-policy.yml
  # - tusd/authorization-policy.yml
  # - tusd/virtualservice.yml
  - keycloak/virtualservice.yml

resources:
  - ../../base/flasher

configMapGenerator:
  - name: api-config
    literals:
      - APP_NAME=JKanda
      - APP_ENV=production
      - APP_DEBUG="false"
      - APP_URL=https://api.jkanda.fr
      - FRONTEND_URL=https://jkanda.fr
      - ADMIN_URL=https://admin.jkanda.fr
      - BROADCAST_DRIVER=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_DRIVER=redis
      - SCOUT_DRIVER=algolia
      - SCOUT_QUEUE=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DB_CONNECTION=pgsql
      - DB_DATABASE=flasher
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=admin
      - DB_PASSWORD=admin
      - LOG_CHANNEL=stderr
      - KEYCLOAK_URL=https://accounts.jkanda.fr
      - KEYCLOAK_BASE_URL=https://accounts.jkanda.fr/auth
      - KEYCLOAK_REALM=jkanda
      - KEYCLOAK_CLIENT_ID=flasher
      - KEYCLOAK_VERIFY_SSL=false
      - TELESCOPE_ENABLED=false
      - ANALYTICS_PROVIDER=GoogleAnalytics
      - MAIL_FROM_ADDRESS=contact@jkanda.fr
      - MAIL_FROM_NAME=JKanda
      - MAIL_MAILER=ses
      - SESSION_LIFETIME=120
      - SESSION_SECURE_COOKIE="true"
      - RESPONSE_CACHE_ENABLED="true"
      - CRISP_ENABLED="false"

  - name: nginx-config
    literals:
      - log.level="debug"

  - name: keycloak-config
    literals:
      - database.vendor=POSTGRES
      - database.name=keycloak
      - database.host=postgres

  - name: admin-config
    literals:
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=80
      - REMOTE_API=https://api.jkanda.fr
      - KEYCLOAK_REMOTE_HOST=https://accounts.jkanda.fr # TODO Remove
      - KEYCLOAK_HOST=https://accounts.jkanda.fr
      - KEYCLOAK_REALM=jkanda
      - KEYCLOAK_CLIENT_ID=flasher
      #- DEBUG=nuxt:*

  - name: frontend-config
    literals:
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=80
      - REMOTE_API=https://api.jkanda.fr/api
      - KEYCLOAK_HOST=https://accounts.jkanda.fr
      - KEYCLOAK_REALM=jkanda
      - KEYCLOAK_CLIENT_ID=flasher
      - APP_URL=https://jkanda.fr
      - ADMIN_URL=https://admin.jkanda.fr
      - NODE_ENV=production
      #- DEBUG=nuxt:*

images:
  - name: nginx
    newName: registry.gitlab.com/flasher/flasher/picblog_nginx
    newTag: "3e931cc"
  - name: php
    newName: registry.gitlab.com/flasher/flasher/picblog_php
    newTag: "3e931cc"
  - name: postgres
    newTag: 12-alpine
  # - name: tusd
  #   newName: docker.io/tusproject/tusd
  #   newTag: v1.2.0
  - name: keycloak
    newName: registry.gitlab.com/flasher/flasher/keycloak
    newTag: 12.0.1
  - name: admin
    newName: registry.gitlab.com/flasher/flasher/flasher-admin
    newTag: "e97738f"
  - name: frontend
    newName: registry.gitlab.com/flasher/flasher/flasher-frontend
    newTag: 1.2.5
  - name: api-v2
    newName: registry.gitlab.com/flasher/flasher/flasher-api-go
    newTag: feature-go-api