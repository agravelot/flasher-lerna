server {
    listen [::]:80 deferred;
    listen 80 deferred deferred;

    # listen on both hosts
    server_name $NGINX_HOST www.$NGINX_HOST;

#    include location/letsencrypt.conf;

    # and redirect to the https host (declared below)
    # avoiding http://www -> https://www -> https:// chain.
    return 301 https://$NGINX_HOST$request_uri;
}

server {
    listen [::]:443 ssl http2;
    listen 443 ssl http2;

    # listen on the wrong host
    server_name www.$NGINX_HOST;

    include ssl/ssl_engine.conf;
    include ssl/policy_intermediate.conf;
    include ssl/certificate_files.conf;
    include ssl/ocsp_stapling.conf;

#    include location/letsencrypt.conf;

    # and redirect to the non-www host (declared below)
    return 301 https://$NGINX_HOST$request_uri;
}

server {
    listen [::]:443 ssl http2 deferred;
    listen 443 ssl http2 deferred;

    # The host name to respond to
    server_name $NGINX_HOST;

    include ssl/ssl_engine.conf;
    include ssl/policy_intermediate.conf;
    include ssl/certificate_files.conf;
    include ssl/ocsp_stapling.conf;

    root /var/www/html/public;
    index index.html index.htm index.php;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }
    location = /robots.txt  {
        access_log off;
        log_not_found off;
    }

    client_max_body_size 100M;

    error_page 404 /index.php;

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        include fastcgi.conf;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

#    include location/letsencrypt.conf;

    include internet_explorer/x-ua-compatible.conf;
    include location/security_file_access.conf;
    include location/cross-origin_web_fonts.conf;
    include location/cross-origin_images.conf;
    include location/web_performance_cache_expiration.conf;
}