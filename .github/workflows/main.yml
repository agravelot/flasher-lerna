name: CI

on: [push]

jobs:
  build:

#    runs-on: ubuntu-latest
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v1

    - name: Define env
      env:
        CI_COMMIT_SHORT_SHA: ${GITHUB_SHA}
        PHP_IMAGE: registry.gitlab.com/flasher/flasher/picblog_php:${CI_COMMIT_SHORT_SHA}
        NGINX_IMAGE: registry.gitlab.com/flasher/flasher/picblog_nginx:${CI_COMMIT_SHORT_SHA}

    - name: Print docker-compose version
      run: docker-compose version

    - name: Login to Github repository
      uses: azure/docker-login@v1
      with:
        login-server: docker.pkg.github.com
        username: agravelot
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to GitLab repository
      uses: azure/docker-login@v1
      with:
        login-server: registry.gitlab.com
        username: ${{ secrets.CI_REGISTRY_USER }}
        password: ${{ secrets.CI_REGISTRY_PASSWORD }}

    - name: Create required docker network
      run: |
        docker network create nginx-proxy
        docker network create database-network

#    - name: Docker Lint
#      uses: luke142367/Docker-Lint-Action@v1.0.0
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        TARGET: Dockerfile
#      with:
#        target: Dockerfile

    - name: Build the Docker stack
      run: docker-compose build

    - name: Push images to registry
      run: docker-compose push php nginx

    - name: Fetch php dev dependencies
      run: |
        docker build -t vendor_dev -f docker/vendor-dev/Dockerfile .
        export VENDOR_DOCKER=$(docker run -d -t vendor_dev tail -f /dev/null)
        docker cp -a $VENDOR_DOCKER:/app/vendor .

    - name: Scan PHP container
      uses: phonito/phonito-scanner-action@master
      with:
        image: ${{ PHP_IMAGE }}
        phonito-token: ${{ secrets.PHONITO_TOKEN }}

    - name: Scan Nginx container
      uses: phonito/phonito-scanner-action@master
      with:
        image: ${{ NGINX_IMAGE }}
        phonito-token: ${{ secrets.PHONITO_TOKEN }}
