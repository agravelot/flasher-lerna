name: api

on:
  push:
    paths:
      - 'apps/api-go/**'
    branches:
      - '**'
    tags:
      - 'v*'
  pull_request:


jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to Gitlab
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1 
        with:
          registry: registry.gitlab.com
          username: ${{ secrets.CI_REGISTRY_USER }}
          password: ${{ secrets.CI_REGISTRY_PASSWORD }}
      -
          name: Docker meta
          id: docker_meta
          uses: crazy-max/ghaction-docker-meta@v1
          with:
            images: registry.gitlab.com/flasher/flasher/flasher-api-go # list of Docker images to use as base name for tags
            tag-semver: |
              {{version}}
              {{major}}.{{minor}}
      -
        name: Build and push base
        uses: docker/build-push-action@v2
        with:
          context: ./apps/api-go
          file: ./apps/api-go/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=registry,ref=registry.gitlab.com/flasher/flasher/flasher-api-go:latest
          cache-to: type=inline
  test:
    # runs-on: self-hosted
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    -
      name: Start docker stack
      run: docker-compose -f apps/api-go/docker-compose.yml up -d
    -
      name: Build api
      uses: actions/setup-go@v2
      with:
        go-version: '^1.16.0'
    -
      name: Test
      run: |
        cd apps/api-go 
        go test ./...