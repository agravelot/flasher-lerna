name: frontend

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'
  pull_request:


jobs:
  build:
    runs-on: self-hosted
    # runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v2
    - 
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to Gitlab
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1 
      with:
        registry: registry.gitlab.com
        username: ${{ secrets.CI_REGISTRY_USER }}
        password: ${{ secrets.CI_REGISTRY_PASSWORD }}
    -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: registry.gitlab.com/flasher/flasher/flasher-frontend # list of Docker images to use as base name for tags
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}
    -
      name: Build and push base
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./apps/frontend/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        # push: true
        # tags: :latest
        cache-from: type=registry,ref=registry.gitlab.com/flasher/flasher/flasher-frontend:latest
        cache-to: type=inline,mode=max  
        build-args: |
            NEXT_PUBLIC_API_URL=https://api.jkanda.fr/api
            NEXT_PUBLIC_KEYCLOAK_REALM=jkanda
            NEXT_PUBLIC_KEYCLOAK_URL=https://accounts.jkanda.fr/auth
            NEXT_PUBLIC_KEYCLOAK_CLIENT_ID=flasher
    #TODO Define env
    # Inside Docker, get build apps in dist and  run yarn
    # Build and deploy clean docker from apps get in previous step

