syntax = "proto3";

package proto.medias.v2;
// option go_package = "api-go/mediasgrpc";
option go_package = "api-go/gen/go/proto/medias/v2;mediaspbv1";


import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/timestamp.proto";

message Media {
  int32 id = 1;
  string name = 2;
	string file_name = 3;
	optional string mime_type = 4;
	int64 size = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
  message CustomProperties {
    int32 height = 1;
    int32 width = 2;
  }
  CustomProperties custom_properties = 8;
  message Responsive {
     repeated string urls = 1; 
     string base64_svg = 2;
  }
  message ResponsiveImages {
    Responsive responsive = 1;
  }
  ResponsiveImages responsive_images = 9;
}

enum MediasResourceType {
  RESOURCE_TYPE_UNSPECIFIED = 0;
  ALBUMS = 1;
}

message CreateRequest {
  repeated string fileNames = 1;
  int32 resourceID = 2;
  MediasResourceType type = 3;
}

message CreateResponse {
  map<string, string> FileUploadUrls = 1;
}

message DeleteRequest {
  int32 id = 1;
}

message DeleteResponse {}

service MediaService {
  rpc Create(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/api/v2/medias"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Add an media"
      description: "Add an media  to the server."
      tags: "Medias"
    };
  }

  rpc Delete(DeleteRequest) returns (DeleteResponse) {
    option (google.api.http) = {
      delete: "/api/v2/medias/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Delete an media"
      description: "Delete an media to the server."
      tags: "Medias"
    };
  }
}