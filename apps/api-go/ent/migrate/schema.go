// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AlbumsColumns holds the columns for the "albums" table.
	AlbumsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "title", Type: field.TypeString, Unique: true},
		{Name: "body", Type: field.TypeString, Nullable: true},
		{Name: "published_at", Type: field.TypeTime, Nullable: true},
		{Name: "private", Type: field.TypeBool},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "notify_users_on_published", Type: field.TypeBool},
		{Name: "meta_description", Type: field.TypeString},
	}
	// AlbumsTable holds the schema information for the "albums" table.
	AlbumsTable = &schema.Table{
		Name:       "albums",
		Columns:    AlbumsColumns,
		PrimaryKey: []*schema.Column{AlbumsColumns[0]},
	}
	// AlbumCategoryColumns holds the columns for the "album_category" table.
	AlbumCategoryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "album_id", Type: field.TypeInt32, Nullable: true},
		{Name: "category_id", Type: field.TypeInt32, Nullable: true},
	}
	// AlbumCategoryTable holds the schema information for the "album_category" table.
	AlbumCategoryTable = &schema.Table{
		Name:       "album_category",
		Columns:    AlbumCategoryColumns,
		PrimaryKey: []*schema.Column{AlbumCategoryColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "album_category_albums_album_categories",
				Columns:    []*schema.Column{AlbumCategoryColumns[3]},
				RefColumns: []*schema.Column{AlbumsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "album_category_categories_album_categories",
				Columns:    []*schema.Column{AlbumCategoryColumns[4]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AlbumCosplayerColumns holds the columns for the "album_cosplayer" table.
	AlbumCosplayerColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "album_id", Type: field.TypeInt32, Nullable: true},
		{Name: "cosplayer_id", Type: field.TypeInt32, Nullable: true},
	}
	// AlbumCosplayerTable holds the schema information for the "album_cosplayer" table.
	AlbumCosplayerTable = &schema.Table{
		Name:       "album_cosplayer",
		Columns:    AlbumCosplayerColumns,
		PrimaryKey: []*schema.Column{AlbumCosplayerColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "album_cosplayer_albums_album_cosplayers",
				Columns:    []*schema.Column{AlbumCosplayerColumns[3]},
				RefColumns: []*schema.Column{AlbumsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "album_cosplayer_cosplayers_album_cosplayers",
				Columns:    []*schema.Column{AlbumCosplayerColumns[4]},
				RefColumns: []*schema.Column{CosplayersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "meta_description", Type: field.TypeString},
		{Name: "album_categories", Type: field.TypeInt32, Nullable: true},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "categories_albums_categories",
				Columns:    []*schema.Column{CategoriesColumns[7]},
				RefColumns: []*schema.Column{AlbumsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CosplayersColumns holds the columns for the "cosplayers" table.
	CosplayersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "picture", Type: field.TypeString, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
	}
	// CosplayersTable holds the schema information for the "cosplayers" table.
	CosplayersTable = &schema.Table{
		Name:       "cosplayers",
		Columns:    CosplayersColumns,
		PrimaryKey: []*schema.Column{CosplayersColumns[0]},
	}
	// SettingsColumns holds the columns for the "settings" table.
	SettingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "value", Type: field.TypeString, Nullable: true},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "type", Type: field.TypeString},
	}
	// SettingsTable holds the schema information for the "settings" table.
	SettingsTable = &schema.Table{
		Name:       "settings",
		Columns:    SettingsColumns,
		PrimaryKey: []*schema.Column{SettingsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AlbumsTable,
		AlbumCategoryTable,
		AlbumCosplayerTable,
		CategoriesTable,
		CosplayersTable,
		SettingsTable,
	}
)

func init() {
	AlbumCategoryTable.ForeignKeys[0].RefTable = AlbumsTable
	AlbumCategoryTable.ForeignKeys[1].RefTable = CategoriesTable
	AlbumCategoryTable.Annotation = &entsql.Annotation{
		Table: "album_category",
	}
	AlbumCosplayerTable.ForeignKeys[0].RefTable = AlbumsTable
	AlbumCosplayerTable.ForeignKeys[1].RefTable = CosplayersTable
	AlbumCosplayerTable.Annotation = &entsql.Annotation{
		Table: "album_cosplayer",
	}
	CategoriesTable.ForeignKeys[0].RefTable = AlbumsTable
}
