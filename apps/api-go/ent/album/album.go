// Code generated by entc, DO NOT EDIT.

package album

const (
	// Label holds the string label denoting the album type in the database.
	Label = "album"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSlug holds the string denoting the slug field in the database.
	FieldSlug = "slug"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldBody holds the string denoting the body field in the database.
	FieldBody = "body"
	// FieldPublishedAt holds the string denoting the published_at field in the database.
	FieldPublishedAt = "published_at"
	// FieldPrivate holds the string denoting the private field in the database.
	FieldPrivate = "private"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldNotifyUsersOnPublished holds the string denoting the notify_users_on_published field in the database.
	FieldNotifyUsersOnPublished = "notify_users_on_published"
	// FieldMetaDescription holds the string denoting the meta_description field in the database.
	FieldMetaDescription = "meta_description"
	// EdgeAlbumCategories holds the string denoting the album_categories edge name in mutations.
	EdgeAlbumCategories = "album_categories"
	// EdgeAlbumCosplayers holds the string denoting the album_cosplayers edge name in mutations.
	EdgeAlbumCosplayers = "album_cosplayers"
	// Table holds the table name of the album in the database.
	Table = "albums"
	// AlbumCategoriesTable is the table that holds the album_categories relation/edge.
	AlbumCategoriesTable = "album_category"
	// AlbumCategoriesInverseTable is the table name for the AlbumCategory entity.
	// It exists in this package in order to avoid circular dependency with the "albumcategory" package.
	AlbumCategoriesInverseTable = "album_category"
	// AlbumCategoriesColumn is the table column denoting the album_categories relation/edge.
	AlbumCategoriesColumn = "album_id"
	// AlbumCosplayersTable is the table that holds the album_cosplayers relation/edge.
	AlbumCosplayersTable = "album_cosplayer"
	// AlbumCosplayersInverseTable is the table name for the AlbumCosplayer entity.
	// It exists in this package in order to avoid circular dependency with the "albumcosplayer" package.
	AlbumCosplayersInverseTable = "album_cosplayer"
	// AlbumCosplayersColumn is the table column denoting the album_cosplayers relation/edge.
	AlbumCosplayersColumn = "album_id"
)

// Columns holds all SQL columns for album fields.
var Columns = []string{
	FieldID,
	FieldSlug,
	FieldTitle,
	FieldBody,
	FieldPublishedAt,
	FieldPrivate,
	FieldUserID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldNotifyUsersOnPublished,
	FieldMetaDescription,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
