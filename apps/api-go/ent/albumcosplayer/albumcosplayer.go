// Code generated by entc, DO NOT EDIT.

package albumcosplayer

const (
	// Label holds the string label denoting the albumcosplayer type in the database.
	Label = "album_cosplayer"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAlbumID holds the string denoting the album_id field in the database.
	FieldAlbumID = "album_id"
	// FieldCosplayerID holds the string denoting the cosplayer_id field in the database.
	FieldCosplayerID = "cosplayer_id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeAlbum holds the string denoting the album edge name in mutations.
	EdgeAlbum = "album"
	// EdgeCosplayer holds the string denoting the cosplayer edge name in mutations.
	EdgeCosplayer = "cosplayer"
	// Table holds the table name of the albumcosplayer in the database.
	Table = "album_cosplayer"
	// AlbumTable is the table that holds the album relation/edge.
	AlbumTable = "album_cosplayer"
	// AlbumInverseTable is the table name for the Album entity.
	// It exists in this package in order to avoid circular dependency with the "album" package.
	AlbumInverseTable = "albums"
	// AlbumColumn is the table column denoting the album relation/edge.
	AlbumColumn = "album_id"
	// CosplayerTable is the table that holds the cosplayer relation/edge.
	CosplayerTable = "album_cosplayer"
	// CosplayerInverseTable is the table name for the Cosplayer entity.
	// It exists in this package in order to avoid circular dependency with the "cosplayer" package.
	CosplayerInverseTable = "cosplayers"
	// CosplayerColumn is the table column denoting the cosplayer relation/edge.
	CosplayerColumn = "cosplayer_id"
)

// Columns holds all SQL columns for albumcosplayer fields.
var Columns = []string{
	FieldID,
	FieldAlbumID,
	FieldCosplayerID,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
