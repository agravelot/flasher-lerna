// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/albums": {
            "get": {
                "description": "Get paginated list of albums",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List albums",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "page",
                        "name": "page",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "per_page",
                        "name": "per_page",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Album"
                            }
                        }
                    }
                }
            }
        },
        "/albums/{slug}": {
            "get": {
                "description": "Get an allbum by slug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Show a album",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Album Slug",
                        "name": "page",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Album"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Album": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string",
                    "example": "\u003cp\u003eHello world\u003c/p\u003e"
                },
                "created_at": {
                    "type": "string",
                    "example": "2019-04-19T17:47:28Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "meta_description": {
                    "type": "string",
                    "example": "A good meta"
                },
                "notify_users_on_published": {
                    "type": "boolean",
                    "example": true
                },
                "private": {
                    "type": "boolean",
                    "example": true
                },
                "published_at": {
                    "type": "string",
                    "example": "2019-04-19T17:47:28Z"
                },
                "slug": {
                    "type": "string",
                    "example": "a-good-album"
                },
                "sso_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "title": {
                    "type": "string",
                    "example": "A good album"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2019-04-19T17:47:28Z"
                },
                "user_id": {
                    "type": "number",
                    "example": 1
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:1323",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "Swagger Example API",
	Description: "This is a sample server celler server.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
