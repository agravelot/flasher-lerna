/* tslint:disable */
/* eslint-disable */
/**
 * proto/articles/v1/articles.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MediaCustomProperties,
    MediaCustomPropertiesFromJSON,
    MediaCustomPropertiesFromJSONTyped,
    MediaCustomPropertiesToJSON,
} from './MediaCustomProperties';
import {
    MediaResponsiveImages,
    MediaResponsiveImagesFromJSON,
    MediaResponsiveImagesFromJSONTyped,
    MediaResponsiveImagesToJSON,
} from './MediaResponsiveImages';

/**
 * 
 * @export
 * @interface V1Media
 */
export interface V1Media {
    /**
     * 
     * @type {number}
     * @memberof V1Media
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof V1Media
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof V1Media
     */
    fileName?: string;
    /**
     * 
     * @type {string}
     * @memberof V1Media
     */
    mimeType?: string;
    /**
     * 
     * @type {string}
     * @memberof V1Media
     */
    size?: string;
    /**
     * 
     * @type {Date}
     * @memberof V1Media
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof V1Media
     */
    updatedAt?: Date;
    /**
     * 
     * @type {MediaCustomProperties}
     * @memberof V1Media
     */
    customProperties?: MediaCustomProperties;
    /**
     * 
     * @type {MediaResponsiveImages}
     * @memberof V1Media
     */
    responsiveImages?: MediaResponsiveImages;
}

/**
 * Check if a given object implements the V1Media interface.
 */
export function instanceOfV1Media(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1MediaFromJSON(json: any): V1Media {
    return V1MediaFromJSONTyped(json, false);
}

export function V1MediaFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1Media {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'fileName': !exists(json, 'fileName') ? undefined : json['fileName'],
        'mimeType': !exists(json, 'mimeType') ? undefined : json['mimeType'],
        'size': !exists(json, 'size') ? undefined : json['size'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'customProperties': !exists(json, 'customProperties') ? undefined : MediaCustomPropertiesFromJSON(json['customProperties']),
        'responsiveImages': !exists(json, 'responsiveImages') ? undefined : MediaResponsiveImagesFromJSON(json['responsiveImages']),
    };
}

export function V1MediaToJSON(value?: V1Media | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'fileName': value.fileName,
        'mimeType': value.mimeType,
        'size': value.size,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'customProperties': MediaCustomPropertiesToJSON(value.customProperties),
        'responsiveImages': MediaResponsiveImagesToJSON(value.responsiveImages),
    };
}

