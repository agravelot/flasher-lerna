version: '3.7'
services:

  traefik:
    image: "traefik:v2.2"
    restart: unless-stopped
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker.network=nginx-proxy"
      - "--providers.docker.exposedbydefault=false"
#      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
#      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
#      - "--entrypoints.web.http.redirections.entrypoint.permanent=false"
      - "--certificatesresolvers.myhttpchallenge.acme.httpchallenge=true"
      - "--certificatesresolvers.myhttpchallenge.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myhttpchallenge.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myhttpchallenge.acme.email=antoine.gravelot@hotmail.fr"
      - "--certificatesresolvers.myhttpchallenge.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - nginx-proxy

  tusd:
    labels:
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-tusd.tls=false"
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-tusd-headers.headers.isDevelopment=true"
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-tusd-headers.headers.accessControlMaxAge=1"

  nginx:
    environment:
      NGINX_HOST: ${APP_URI}
      ERROR_LOG_LEVEL: ${ERROR_LOG_LEVEL}
#    ports:
#    - "8090:80"
    labels:
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls=false"
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-headers.headers.isDevelopment=true"
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-headers.headers.accessControlMaxAge=1"
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-error-check.circuitbreaker.expression=NetworkErrorRatio() > 0.10"

  php:
    environment:
      APP_DEBUG: "true"
      DB_PASSWORD: ${DB_PASSWORD}
      SESSION_SECURE_COOKIE: null
      TELESCOPE_ENABLED: "true"

  cache:
    image: redis:5.0-alpine
    restart: unless-stopped
    networks:
      - database-network
    volumes:
      - cache_data:/data:rw,delegated

  db:
    image: postgres:11-alpine
    restart: unless-stopped
    expose:
      - "5432"
    networks:
      - database-network
    volumes:
      - db-data:/var/lib/postgresql/data:rw,delegated
    environment:
      POSTGRES_DB: flasher
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: ${DB_PASSWORD}

#  keycloak:
#    image: quay.io/keycloak/keycloak:latest
#    restart: unless-stopped
#    environment:
#      DB_VENDOR: POSTGRES
#      DB_ADDR: db-kc
#      DB_DATABASE: keycloak
#      DB_SCHEMA: public
#      DB_USER: admin
#      DB_PASSWORD: ${DB_PASSWORD}
#      KEYCLOAK_USER: admin
#      KEYCLOAK_PASSWORD: admin
#      PROXY_ADDRESS_FORWARDING: "true"
#      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
#      #JDBC_PARAMS: "ssl=true"
#    expose:
#      - 8080
#    networks:
#      - database-network
#      - nginx-proxy
#    labels:
#      - "traefik.enable=true"
#      - "traefik.docker.network=nginx-proxy"
#      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-keycloak-insecure.rule=Host(`${KEYCLOAK_URI}`) || Host(`www.${KEYCLOAK_URI}`)"
#      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-keycloak-insecure.entrypoints=web"
#      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-keycloak-insecure.middlewares=${COMPOSE_PROJECT_NAME}-keycloak-headers,${COMPOSE_PROJECT_NAME}-keycloak-https-only,${COMPOSE_PROJECT_NAME}-keycloak-ratelimit,${COMPOSE_PROJECT_NAME}-keycloak-compress"
#      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-keycloak.rule=Host(`${KEYCLOAK_URI}`) || Host(`www.${KEYCLOAK_URI}`)"
#      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-keycloak.entrypoints=websecure"
#      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-keycloak.tls.certresolver=myhttpchallenge"
#      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-keycloak.middlewares=${COMPOSE_PROJECT_NAME}-keycloak-headers,${COMPOSE_PROJECT_NAME}-keycloak-https-only,${COMPOSE_PROJECT_NAME}-keycloak-ratelimit,${COMPOSE_PROJECT_NAME}-keycloak-retry,${COMPOSE_PROJECT_NAME}-keycloak-error-check,${COMPOSE_PROJECT_NAME}-keycloak-compress"
#      #- "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-headers.headers.stsSeconds=63072000"
#      #- "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-headers.headers.stsIncludeSubdomains=true"
#      #- "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-headers.headers.stsPreload=true"
#      #- "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-headers.headers.forceSTSHeader=true"
#      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-headers.headers.contentTypeNosniff=true"
#      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-headers.headers.sslRedirect=true"
#      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-headers.headers.referrerPolicy=same-origin"
#      #- "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-headers.headers.frameDeny=true"
#      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-headers.headers.browserXssFilter=true"
#      #- "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-headers.headers.sslProxyHeaders=https"
#      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-compress.compress=true"
#      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-https-only.redirectscheme.scheme=https"
#      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-https-only.redirectscheme.permanent=true"
#      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-retry.retry.attempts=4"
#      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-error-check.circuitbreaker.expression=ResponseCodeRatio(500, 600, 0, 600) > 0.30 || NetworkErrorRatio() > 0.10"
#      #- "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-limit.buffering.maxRequestBodyBytes=50000000" # 50 Mb
#      #- "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-limit.buffering.memResponseBodyBytes=50000000" # 50 Mb
#      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-ratelimit.ratelimit.average=1000"
#      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-ratelimit.ratelimit.burst=500"
#      # Local
#      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-headers.headers.isDevelopment=true"
#      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-headers.headers.accessControlAllowMethods=GET,OPTIONS,POST,PUT,PATCH,DELETE"
#      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-headers.headers.accessControlAllowOriginList=*"
#      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-headers.headers.accessControlMaxAge=1"
#      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-headers.headers.accessControlAllowCredentials=true"
#      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-keycloak-headers.headers.accessControlAllowHeaders=*"
#    command: "-b 0.0.0.0 --debug"

#  db-kc:
#    image: postgres:11-alpine
#    restart: unless-stopped
#    expose:
#      - "5432"
#    networks:
#      - database-network
#    volumes:
#      - db-kc-data:/var/lib/postgresql/data:rw,delegated
#    environment:
#      POSTGRES_DB: keycloak
#      POSTGRES_USER: admin
#      POSTGRES_PASSWORD: ${DB_PASSWORD}

volumes:
  cache_data:
  db-data:

networks:
  nginx-proxy:
    external: true
  database-network:
    external: true
